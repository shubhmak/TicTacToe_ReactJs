{"version":3,"sources":["components/Square.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Square","v","oc","bg","ln","idd","console","log","iswin","includes","style","type","onClick","Board","useState","Array","fill","result","setresult","isx","setisx","a","calculateWinner","a1","squares","lines","i","length","b","c","renders","id","$","css","map","item","pos","oncl","className","App","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72964f67.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = ({v,oc,bg,ln,idd}) => {\r\n  //  const [iswin,setiswin] = useState(ln);\r\n    console.log(ln);  \r\n    console.log(\"idd: \"+idd);\r\n    //const iswin = ln ?idd in ln : false;\r\n    const iswin = ln ? ln.includes(idd) : false;\r\n    return (\r\n        <>\r\n             <button style={{'backgroundColor':iswin?'#8E44AD ' : bg}} type = \"button\" onClick={oc} >{v?v:'.'}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import React, {useState} from 'react'\r\nimport Square from './Square'\r\nimport $ from 'jquery'\r\nconst Board = () => {\r\nconst [result,setresult] =  useState(Array(9).fill(null));\r\nconst [isx,setisx] = useState(false);\r\nconst [line,setline] =useState([]);\r\nconst a=calculateWinner(result)?calculateWinner(result)[0]:calculateWinner(result);\r\nconst a1=calculateWinner(result)?calculateWinner(result)[1]:calculateWinner(result);\r\n//const [wnner,setwnner] = useState(null)\r\n\r\n   \r\n    const oncl=(i)=>{\r\n        console.log(isx? 'x':'y');\r\n        $(\"#1\").css(\"Color\", \"yellow\");\r\n        console.log(a1)\r\n        //setisx(!isx);\r\n        if(result[i])\r\n        return;\r\n        setresult( result.map((item,pos)=>{\r\n         \r\n            if(result[pos]|| a){\r\n                 \r\n                return item;\r\n            }\r\n            if(pos===i){\r\n                //result[pos]=isx? 'x':'o';\r\n                return isx? 'X':'O';\r\n\r\n            } } ));\r\n            setisx(!isx);\r\n\r\n\r\n        \r\n        //setwnner(calculateWinner(result));\r\n        console.log(result)\r\n        //console.log(wnner)\r\n        \r\n    }\r\n\r\n    function calculateWinner(squares) {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            \r\n            console.log('winner : '+a+' is :'+ squares[a])\r\n            \r\n            return [squares[a],lines[i]];\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n    const renders=(i)=><Square id={i} oc={()=>oncl(i)} v={result[i]}  ln={a1} idd={i} bg={i in line?\"#D6EAF8 \":'#D6EAF8 '} />\r\n\r\n    \r\n    //const a=calculateWinner(result);\r\n    return (<><center>\r\n        <div className=\"b\" >\r\n            <div>{renders(0)}{renders(1)}{renders(2)}</div>\r\n            <div>{renders(3)}{renders(4)}{renders(5)}</div>\r\n            <div>{renders(6)}{renders(7)}{renders(8)}</div>\r\n            \r\n            <div>{a?'winner is : '+ a +\"!!!..Congrats \"+ a+\"!!\":'current player is '+ (isx?\"X\":\"O\")}</div>\r\n\r\n        </div></center></> \r\n    )\r\n} \r\n\r\nexport default Board\r\n","\nimport './App.css';\nimport Board from './components/Board';\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\n<div class=\"navbar\"><span>CSS Parallax Scrolling Tutorial</span></div>  \n        <div className=\"parallax-wrapper\">\n            <div className=\"content\"><center>\n            <h1> <i> 2 Player TicTacToe</i></h1>\n            <Board/> </center>\n            </div>\n        </div>\n        <div className=\"regular-wrapper\">\n            <div className=\"content\">\n                <p><h1><b><i><strong>~ShubhMak</strong></i></b><br />ReactJs</h1>  </p>\n            </div>\n        </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}